// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema
// npx prisma migrate reset - использовал, когда добавил account, но поскольку у прошлых пользователей не было связи с этой таблицей, то пришлось использовать эту команду
generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id    Int    @id @default(autoincrement())
  email String @unique
  hash  String
  salt  String

  account   Account?
  blockList BlockList?
}

// аккаунт содержить инфу более бизнесового(прикладного уровня)
model Account {
  id Int @id @default(autoincrement())

  ownerId Int  @unique // нужно указывать если идет связь 1 к 1
  owner   User @relation(fields: [ownerId], references: [id])

  isBlockingEnabled Boolean
}

// будет хранить список блокировок. Буду хранить его в User, посколько BlockList это отдельная бизнес сущность и так будет удобнее работать со всем списком сразу
model BlockList {
  id Int @id @default(autoincrement())

  ownerId Int  @unique
  owner   User @relation(fields: [ownerId], references: [id])

  items BlockItem[]
}

// будет описывать элемент списка блокировки
model BlockItem {
  id Int @id @default(autoincrement())

  blockListId Int       @unique
  blockList   BlockList @relation(fields: [blockListId], references: [id]) 

  type BlockItemType
  createdAt DateTime @default(now())
}

// можно блочить сайт или по ключевому слову на сайте(спорт, новости и т.д)
enum BlockItemType {
  Website
  KeyWord
}